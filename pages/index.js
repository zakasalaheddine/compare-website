import { dehydrate, QueryClient, useQuery } from '@tanstack/react-query'
import Head from 'next/head'
import BullEye from '../components/bullsEye'
import Headline from '../components/headline'
import HeadlineDescriptionVideo from '../components/headlineDescriptionVideo'
import Navbar from '../components/navbar'
import { getNetworkData } from '../queries/network'

export default function Home() {
  const { data } = useQuery(['network'], getNetworkData)

  if (!data) return <div>Nothing Found</div>
  const {
    homepage: { headline, sections }
  } = data
  console.log({ data })
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Navbar />
      <main className="bg-white-text h-screen">
        <Headline content={headline} />
        {sections.map(({ collection, item }, idx) => {
          switch (collection) {
            case 'bullsEye':
              return <BullEye elements={item} key={`section__${idx}`} />
            case 'headlineDescriptionVideo':
              return (
                <HeadlineDescriptionVideo
                  headline={item.headline}
                  description={item.description}
                  video={item.videoUrl}
                  key={`section__${idx}`}
                />
              )
            default:
              break
          }
        })}
      </main>
    </div>
  )
}

export async function getStaticProps() {
  const queryClient = new QueryClient()
  await queryClient.prefetchQuery(['network'], getNetworkData)
  return {
    props: {
      dehydratedState: dehydrate(queryClient)
    }
  }
}
